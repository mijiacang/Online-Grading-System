                      3234606022O:7:"problem":9:{s:5:"tests";a:15:{i:0;O:8:"testcase":7:{s:5:"input";s:23:"
4
*..*
....
....
*..*
";s:6:"output";s:17:"
Yes
Yes
Yes
Yes
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:1;O:8:"testcase":7:{s:5:"input";s:33:"
5
..***
..*.*
.****
*.*..
**...
";s:6:"output";s:14:"
No
No
No
Yes
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:2;O:8:"testcase":7:{s:5:"input";s:33:"
5
.***.
*...*
*****
*...*
.***.
";s:6:"output";s:15:"
Yes
Yes
No
No
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:10;O:8:"testcase":7:{s:5:"input";s:32:"5
*****
*****
*****
*****
*****
";s:6:"output";s:16:"Yes
Yes
Yes
Yes
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:11;O:8:"testcase":7:{s:5:"input";s:33:"
5
.....
.....
.....
.....
.....
";s:6:"output";s:16:"Yes
Yes
Yes
Yes
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:12;O:8:"testcase":7:{s:5:"input";s:604:"
24
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
*.*.*.*.*.*.*.*.*.*.*.*.
";s:6:"output";s:13:"No
Yes
No
No
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:13;O:8:"testcase":7:{s:5:"input";s:23:"
4
**.*
**.*
*.**
*.**
";s:6:"output";s:12:"No
No
No
No
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:14;O:8:"testcase":7:{s:5:"input";s:75:"
8
****....
****....
****....
****....
....****
....****
....****
....****
";s:6:"output";s:14:"No
No
Yes
Yes
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:15;O:8:"testcase":7:{s:5:"input";s:9:"
2
.*
.*
";s:6:"output";s:13:"No
Yes
No
No
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:16;O:8:"testcase":7:{s:5:"input";s:15:"
3
...
.*.
...
";s:6:"output";s:16:"Yes
Yes
Yes
Yes
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:17;O:8:"testcase":7:{s:5:"input";s:114:"
10
.**..**..*
.**..**..*
.**..**..*
.**..**..*
.**..**..*
.**..**..*
.**..**..*
.**..**..*
.**..**..*
.**..**..*
";s:6:"output";s:13:"No
Yes
No
No
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:18;O:8:"testcase":7:{s:5:"input";s:33:"
5
*..*.
.*.**
*....
..*.*
..**.
";s:6:"output";s:12:"No
No
No
No
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:19;O:8:"testcase":7:{s:5:"input";s:23:"
4
..*.
**.*
....
*..*
";s:6:"output";s:12:"No
No
No
No
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:20;O:8:"testcase":7:{s:5:"input";s:5:"
1
.
";s:6:"output";s:16:"Yes
Yes
Yes
Yes
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}i:21;O:8:"testcase":7:{s:5:"input";s:5:"
1
*
";s:6:"output";s:16:"Yes
Yes
Yes
Yes
";s:5:"imode";s:1:"0";s:5:"omode";s:1:"0";s:10:"time_limit";N;s:9:"mem_limit";N;s:6:"points";N;}}s:4:"body";s:1298:"
<P>Most of the encryption techniques used by all the aliens are very weak and based of letter inversions and weird mappings. However, the aliens soon start copying the encryption techniques used by humans in the early 20th century. They encrypt the data in image files. But that is too obvious to detect. So they plan an additional strategy. They duplicate, 1 or more times the existing data to make it tough to separate out the encrypt word. So much so, that they duplicate the data along any of the symmetric lines in the image. Obviously you dont take more than 1 day to decrypt the message. So again you are left with a job to write a program that will automatically decrypt the message. As a first step, we will remove the obfuscation (unnecessary duplication of data) by finding out all the axes of symmetry to the given image.</P>
<P>The message will be an image in the form of a 2d square grid of characters, composing of only '.' and '*'. Since the image is a perfect square and of discrete elements, we can have only 4 possible axes of symmetry: Verticle, Horizontal, Diagonal top right to left bottom or Diagonal top left to right bottom. Your task is to detect along how many of these axes is the image symmetric. Output "Yes" or "No" for these 4 axes. (See examples for details.)</P>
";s:8:"examples";a:3:{i:0;s:31:"
Symmetric about all the axes.
";i:1;s:61:"
Symmetric about the diagonal from right top to left bottom.
";i:2;s:47:"
Symmetric about vertical and horizontal axes.
";}s:11:"constraints";a:2:{s:5:"INPUT";a:2:{i:0;s:67:"
Line 1 will contain a number n. n will be between 1-25 inclusive.
";i:1;s:118:"
Lines 2 - n+1 will contain a 2D grid. Each line will be n characters long. Each character will be either '.' or '*'.
";}s:6:"OUTPUT";a:5:{i:0;s:28:"
Print 4 strings on 4 lines
";i:1;s:69:"
Line 1 : "Yes" if image symmetric about the Vertical axis else "NO"
";i:2;s:71:"
Line 2 : "Yes" if image symmetric about the Horizontal axis else "NO"
";i:3;s:92:"
Line 3 : "Yes" if image symmetric about the Diagonal1 (left top to right bottom) else "NO"
";i:4;s:92:"
Line 4 : "Yes" if image symmetric about the Diagonal2 (right top to left bottom) else "NO"
";}}s:6:"parser";i:0;s:6:"inside";a:5:{i:0;N;i:1;s:7:"PROBLEM";i:2;s:8:"EXAMPLES";i:3;s:7:"EXAMPLE";i:4;s:6:"OUTPUT";}s:5:"depth";i:0;s:2:"id";s:1:"2";s:10:"error_func";s:5:"error";}